{"version":3,"file":"static/js/433.bf2e3df1.chunk.js","mappings":"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","sources":["components/DarkModeSwitcher/index.js","components/DarkModeSwitcher/DarkModeSwitcher.js","assets/images/Raj.js","components/Navbar/Logo.js","components/Navbar/Menu.js","components/Navbar/MobileMenu.js","components/Navbar/Navbar.js","components/Navbar/index.js"],"sourcesContent":["import DarkModeSwitcher from \"./DarkModeSwitcher\";\n\nexport default DarkModeSwitcher","import React, { useContext } from \"react\";\nimport { Switch, FormControlLabel } from \"@material-ui/core\";\nimport ThemeContext from \"../../contexts/themeContext\";\nimport { useTranslation } from \"react-i18next\";\n\nconst DarkModeSwitcher = ({ onClose }) => {\n    const { isDarkMode, setIsDarkMode } = useContext(ThemeContext);\n    const { t } = useTranslation()\n    return (\n        <FormControlLabel\n            control={\n                <Switch\n                    checked={isDarkMode}\n                    name=\"checkedDarkMode\"\n                    color=\"primary\"\n                    onChange={() => {\n                        if (onClose) {\n                            onClose();\n                        }\n                        setIsDarkMode(!isDarkMode);\n                    }}\n                />\n            }\n            label={t('dark_mode')}\n        />\n    );\n};\n\nexport default DarkModeSwitcher;\n","import * as React from \"react\";\nimport { useTheme } from \"@material-ui/styles\";\nimport { Typography } from \"@material-ui/core\";\n\nconst Logo = (props) => {\n  const theme = useTheme();\n  return (\n    <>\n      <Typography variant=\"h5\" color=\"initial\">\n        My Portfolio\n      </Typography>\n    </>\n  );\n};\n\nexport default Logo;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core\";\nimport { Link } from \"react-scroll\";\nimport Raj from \"../../assets/images/Raj\";\n\nconst Logo = ({ setHomeIsActive, ...rest }) => {\n    const classes = useStyles();\n    return (\n        <Link\n            spy\n            smooth\n            duration={500}\n            offset={-70}\n            to=\"home\"\n            onSetActive={() => setHomeIsActive(true)}\n            onSetInactive={() => setHomeIsActive(false)}\n            className={classes.root}\n        >\n            <Raj {...rest} />\n        </Link>\n    );\n};\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        cursor: \"pointer\",\n    },\n}));\n\nexport default Logo;\n","import React, { useState, useEffect, useContext } from \"react\";\nimport { Tab, Tabs, Button, makeStyles, withStyles, Link as MuiLink } from \"@material-ui/core\";\nimport { motion, useAnimation } from \"framer-motion\";\nimport { Link, Events } from \"react-scroll\";\nimport LoaderContext from \"../../contexts/loaderContext\";\nimport { useTranslation } from \"react-i18next\";\n\nconst smoothScrollProps = {\n    spy: true,\n    smooth: true,\n    offset: -70,\n    duration: 500,\n};\n\nconst AnimatedLink = React.forwardRef((props, ref) => (\n    <motion.div ref={ref} custom={props.custom} animate={props.animate}>\n        <Link {...smoothScrollProps} {...props} />\n    </motion.div>\n));\n\nconst Menu = ({homeIsActive}) => {\n    const classes = useStyles();\n    const [value, setValue] = useState(false);\n    const [isScrolling, setIsScrolling] = useState(false);\n    const { isLoading } = useContext(LoaderContext);\n    const controls = useAnimation();\n    const { t } = useTranslation()\n\n    useEffect(() => {\n        Events.scrollEvent.register(\"begin\", (to, element) => {\n            setIsScrolling(true);\n        });\n\n        Events.scrollEvent.register(\"end\", (to, element) => {\n            setIsScrolling(false);\n        });\n    });\n\n    useEffect(() => {\n        if (!isLoading) {\n            controls.start((i) => ({\n                y: 0,\n                opacity: 1,\n                transition: { delay: i * 0.1 + 0.3 },\n            }));\n        } else {\n            controls.start({ opacity: 0, y: -5 });\n        }\n    }, [isLoading, controls]);\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n\n    const spyHandleChange = (index) => {\n        if (!isScrolling) {\n            setValue(index);\n        }\n    };\n\n    useEffect(() => {\n        if (homeIsActive){\n            setValue(false)\n        }\n    }, [homeIsActive])\n\n    return (\n        <div className={classes.wrapper}>\n            <StyledTabs\n                className={classes.tabs}\n                value={value}\n                indicatorColor=\"primary\"\n                textColor=\"primary\"\n                onChange={handleChange}\n                aria-label=\"disabled tabs example\"\n            >\n                <StyledTab\n                    component={AnimatedLink}\n                    custom={0}\n                    animate={controls}\n                    to=\"about\"\n                    label={t('menu_about')}\n                    onSetActive={() => spyHandleChange(0)}\n                    onSetInactive={()=>spyHandleChange(false)}\n                />\n                <StyledTab\n                    component={AnimatedLink}\n                    animate={controls}\n                    custom={1}\n                    to=\"experience\"\n                    label={t('menu_experience')}\n                    onSetActive={() => spyHandleChange(1)}\n                />\n                <StyledTab\n                    component={AnimatedLink}\n                    animate={controls}\n                    custom={2}\n                    to=\"projects\"\n                    label={t('menu_projects')}\n                    onSetActive={() => spyHandleChange(2)}\n                />\n                <StyledTab\n                    component={AnimatedLink}\n                    animate={controls}\n                    custom={3}\n                    to=\"contact\"\n                    label={t('menu_contact')}\n                    onSetActive={() => spyHandleChange(3)}\n                />\n            </StyledTabs>\n            <motion.div custom={4} animate={controls}>\n                <Button\n                    component={MuiLink}\n                    href=\"/my-portfolio/resume.pdf\"\n                    variant=\"outlined\"\n                    color=\"primary\"\n                    underline=\"none\"\n                >\n                    {t('menu_resume')}\n                </Button>\n            </motion.div>\n        </div>\n    );\n};\n\nconst useStyles = makeStyles((theme) => ({\n    wrapper: {\n        display: \"flex\",\n        alignItems: \"center\",\n    },\n    tabs: {\n        marginRight: theme.spacing(4),\n    },\n    navMenuItem: {\n        marginRight: theme.spacing(1),\n    },\n}));\n\nconst StyledTab = withStyles((theme) => ({\n    root: {\n        transition: \".2s\",\n        minWidth: 120,\n        \"&:hover\": {\n            color: theme.palette.text.primary,\n        },\n    },\n}))((props) => <Tab disableRipple {...props} />);\n\nconst StyledTabs = withStyles({\n    indicator: {\n        \"& > span\": {\n            maxWidth: 20,\n        },\n    },\n})((props) => <Tabs {...props} variant=\"fullWidth\" TabIndicatorProps={{ children: <span /> }} />);\n\nexport default Menu;\n","import React from \"react\";\nimport { makeStyles, Drawer, List, Button, Divider, ListItem, Link as MuiLink } from \"@material-ui/core\";\nimport { Link } from \"react-scroll\";\nimport DarkModeSwitcher from \"../DarkModeSwitcher\";\nimport { useTranslation } from \"react-i18next\";\n\nconst MobileMenu = ({ open, onClose, onOpen }) => {\n    const classes = useStyles();\n    const { t } = useTranslation();\n    const listItemProps = {\n        button: true,\n        component: Link,\n        onClick: onClose,\n        onKeyDown: onClose,\n        spy: true,\n        smooth: true,\n        offset: 0,\n        duration: 500,\n        className: classes.listItem,\n        activeClass: classes.active,\n    };\n\n    return (\n        <Drawer anchor=\"left\" open={open} onClose={onClose} classes={{ paper: classes.drawer }}>\n            <div className={classes.list} role=\"presentation\">\n                <List className={classes.fullList}>\n                    <ListItem {...listItemProps} to=\"about\">\n                        {t('menu_about')}\n                    </ListItem>\n                    <ListItem {...listItemProps} to=\"experience\">\n                        {t('menu_experience')}\n                    </ListItem>\n                    <ListItem {...listItemProps} to=\"projects\">\n                        {t('menu_projects')}\n                    </ListItem>\n                    <ListItem {...listItemProps} to=\"contact\">\n                        {t('menu_contact')}\n                    </ListItem>\n                    <ListItem className={classes.btnContainer}>\n                        <Button\n                            component={MuiLink}\n                            href=\"/resume.pdf\"\n                            variant=\"outlined\"\n                            color=\"primary\"\n                            underline=\"none\"\n                            >\n                            {t('menu_resume')}\n                        </Button>\n                    </ListItem>\n                    <ListItem className={classes.btnContainer}>\n                        <DarkModeSwitcher onClose={onClose} />\n                    </ListItem>\n                    <Divider />\n                </List>\n            </div>\n        </Drawer>\n    );\n};\n\nconst useStyles = makeStyles((theme) => ({\n    drawer: {\n        backgroundColor: theme.palette.background.default,\n    },\n    list: {\n        width: 250,\n    },\n    fullList: {\n        width: \"auto\",\n        marginTop: theme.spacing(4),\n    },\n    listItem: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        padding: theme.spacing(2, 0),\n        \"&:hover\": {\n            backgroundColor: \"rgb(80,80,80)\",\n        },\n    },\n    btnContainer: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        marginTop: theme.spacing(1),\n    },\n    active: {\n        backgroundColor: theme.palette.primary.main,\n    },\n}));\n\nexport default MobileMenu;\n","import React, { useContext, useState, useEffect } from \"react\";\nimport { makeStyles, useTheme, useMediaQuery, AppBar, Toolbar, Hidden } from \"@material-ui/core\";\nimport { motion, useAnimation } from \"framer-motion\";\nimport Logo from \"./Logo\";\nimport Menu from \"./Menu\";\nimport MobileMenu from \"./MobileMenu\";\nimport loaderContext from \"../../contexts/loaderContext\";\n\nconst Navbar = () => {\n    const [homeIsActive, setHomeIsActive]=useState(true)\n    const isMobile = useMediaQuery(\"(max-width:700px)\");\n    const { isLoading } = useContext(loaderContext);\n    const controls = useAnimation();\n    const theme = useTheme();\n    const [scroll, setScroll] = useState(false);\n    const [mobileNavIsOpen, setMobileNavIsOpen] = useState(false);\n    const classes = useStyles({ scroll, isMobile });\n    const handleNav = () => setScroll(window.scrollY > 30);\n    window.addEventListener(\"scroll\", handleNav);\n\n    const appbarVariants = {\n        initial: { height: isMobile ? 70 : 100, boxShadow: theme.shadows[0] },\n        scrolled: { height: theme.navbarHeight, boxShadow: theme.shadows[10] },\n    };\n\n    useEffect(() => {\n        if (!isLoading) {\n            controls.start({\n                y: 0,\n                transition: {\n                    delay: 0.05,\n                    type: \"spring\",\n                    stiffness: 260,\n                    damping: 20,\n                },\n            });\n        } else {\n            controls.start({ y: -100 });\n        }\n    }, [isLoading, controls]);\n\n    return (\n        <motion.div\n            animate={controls}\n        >\n            <AppBar position=\"fixed\" elevation={0} className={classes.navbar} component=\"nav\">\n                <Toolbar\n                    className={classes.toolbar}\n                    component={motion.div}\n                    variants={appbarVariants}\n                    animate={scroll ? \"scrolled\" : \"initial\"}\n                    transition={{\n                        type: \"spring\",\n                        stiffness: 260,\n                        damping: 20,\n                    }}\n                >\n                    <Logo className={classes.logo} setHomeIsActive={setHomeIsActive} />\n                    <Hidden smDown>\n                        <Menu homeIsActive={homeIsActive} />\n                    </Hidden>\n                </Toolbar>\n            </AppBar>\n            <Hidden mdUp>\n                <MobileMenu\n                    open={mobileNavIsOpen}\n                    onClose={() => setMobileNavIsOpen(false)}\n                    onOpen={() => setMobileNavIsOpen(true)}\n                />\n            </Hidden>\n        </motion.div>\n    );\n};\n\nconst useStyles = makeStyles((theme) => ({\n    logo: {\n        width: \"150px\",\n    },\n    navbar: {\n        backgroundColor: theme.palette.background.default,\n    },\n    toolbar: {\n        justifyContent: \"space-between\",\n        alignItems:\"center\",\n        padding: (props) => (props.isMobile ? theme.spacing(0, 2) : theme.spacing(0, 6)),\n    },\n}));\n\nexport default Navbar;\n","import Navbar from \"./Navbar\";\nexport default Navbar;\n"],"names":["onClose","useContext","ThemeContext","isDarkMode","setIsDarkMode","t","useTranslation","FormControlLabel","control","Switch","checked","name","color","onChange","label","props","useTheme","Typography","variant","useStyles","makeStyles","theme","root","cursor","setHomeIsActive","rest","classes","spy","smooth","duration","offset","to","onSetActive","onSetInactive","className","Raj","smoothScrollProps","AnimatedLink","React","ref","motion","custom","animate","wrapper","display","alignItems","tabs","marginRight","spacing","navMenuItem","StyledTab","withStyles","transition","minWidth","palette","text","primary","Tab","disableRipple","StyledTabs","indicator","maxWidth","Tabs","TabIndicatorProps","children","homeIsActive","useState","value","setValue","isScrolling","setIsScrolling","isLoading","LoaderContext","controls","useAnimation","useEffect","Events","element","start","opacity","y","i","delay","spyHandleChange","index","indicatorColor","textColor","event","newValue","component","Button","MuiLink","href","underline","drawer","backgroundColor","background","default","list","width","fullList","marginTop","listItem","justifyContent","padding","btnContainer","active","main","open","onOpen","listItemProps","button","Link","onClick","onKeyDown","activeClass","Drawer","anchor","paper","role","List","ListItem","DarkModeSwitcher","Divider","logo","navbar","toolbar","isMobile","useMediaQuery","loaderContext","scroll","setScroll","mobileNavIsOpen","setMobileNavIsOpen","window","addEventListener","scrollY","appbarVariants","initial","height","boxShadow","shadows","scrolled","navbarHeight","type","stiffness","damping","AppBar","position","elevation","Toolbar","variants","Hidden","smDown","mdUp"],"sourceRoot":""}